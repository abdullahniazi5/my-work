{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":10042111,"sourceType":"datasetVersion","datasetId":6186188}],"dockerImageVersionId":30787,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-20T12:49:04.666084Z","iopub.execute_input":"2024-10-20T12:49:04.667078Z","iopub.status.idle":"2024-10-20T12:49:05.318597Z","shell.execute_reply.started":"2024-10-20T12:49:04.667030Z","shell.execute_reply":"2024-10-20T12:49:05.317603Z"},"trusted":true},"outputs":[{"name":"stdout","text":"/kaggle/input/helmet-detection/README.dataset.txt\n/kaggle/input/helmet-detection/README.roboflow.txt\n/kaggle/input/helmet-detection/data.yaml\n/kaggle/input/helmet-detection/valid/labels/images_jpeg.rf.04226a747ccfd0960907b3979da9fa35.txt\n/kaggle/input/helmet-detection/valid/labels/images_jpeg.rf.debf289715496895004921caccb67605.txt\n/kaggle/input/helmet-detection/valid/labels/images_jpeg.rf.52e994e4da4a163f57c59312a658ed0e.txt\n/kaggle/input/helmet-detection/valid/labels/images_jpeg.rf.dc0f78f8eecf79ade42c8a30e15559f2.txt\n/kaggle/input/helmet-detection/valid/images/images_jpeg.rf.52e994e4da4a163f57c59312a658ed0e.jpg\n/kaggle/input/helmet-detection/valid/images/images_jpeg.rf.04226a747ccfd0960907b3979da9fa35.jpg\n/kaggle/input/helmet-detection/valid/images/images_jpeg.rf.dc0f78f8eecf79ade42c8a30e15559f2.jpg\n/kaggle/input/helmet-detection/valid/images/images_jpeg.rf.debf289715496895004921caccb67605.jpg\n/kaggle/input/helmet-detection/test/labels/S1850af599d0549eb9ab99ce3926dae70B-jpg_720x720q80_jpg.rf.f5e8454f25a113e55dd5e000ccf6d717.txt\n/kaggle/input/helmet-detection/test/labels/S1850af599d0549eb9ab99ce3926dae70B-jpg_720x720q80_jpg.rf.d1f01001b03410c5da9fe5515eb28985.txt\n/kaggle/input/helmet-detection/test/labels/S1850af599d0549eb9ab99ce3926dae70B-jpg_720x720q80_jpg.rf.92d79f944c6542f3ed5c2c77bcec6ea4.txt\n/kaggle/input/helmet-detection/test/labels/S1850af599d0549eb9ab99ce3926dae70B-jpg_720x720q80_jpg.rf.3673f689efa4c89e75d25dafd6a977cd.txt\n/kaggle/input/helmet-detection/test/images/S1850af599d0549eb9ab99ce3926dae70B-jpg_720x720q80_jpg.rf.3673f689efa4c89e75d25dafd6a977cd.jpg\n/kaggle/input/helmet-detection/test/images/S1850af599d0549eb9ab99ce3926dae70B-jpg_720x720q80_jpg.rf.92d79f944c6542f3ed5c2c77bcec6ea4.jpg\n/kaggle/input/helmet-detection/test/images/S1850af599d0549eb9ab99ce3926dae70B-jpg_720x720q80_jpg.rf.f5e8454f25a113e55dd5e000ccf6d717.jpg\n/kaggle/input/helmet-detection/test/images/S1850af599d0549eb9ab99ce3926dae70B-jpg_720x720q80_jpg.rf.d1f01001b03410c5da9fe5515eb28985.jpg\n/kaggle/input/helmet-detection/train/labels/download-1-_jpeg.rf.cdcb0ed149b41b801d2e22866cb3f1a1.txt\n/kaggle/input/helmet-detection/train/labels/download-3-_jpeg.rf.159eef270b4e64e678968ed753d37aed.txt\n/kaggle/input/helmet-detection/train/labels/download-4-_jpeg.rf.3fd096d581c8bc142efbde4703cfa53e.txt\n/kaggle/input/helmet-detection/train/labels/download-3-_jpeg.rf.25b676dbd95af36026fc7930166d280e.txt\n/kaggle/input/helmet-detection/train/labels/download-4-_jpeg.rf.a395786b99699a8da18a9b33796049ca.txt\n/kaggle/input/helmet-detection/train/labels/download-1-_jpeg.rf.5b083ffc1b5e066f9bbc6f30d95afc97.txt\n/kaggle/input/helmet-detection/train/labels/download-3-_jpeg.rf.892ca6a5f88b684a7ed049ee848e3d5a.txt\n/kaggle/input/helmet-detection/train/labels/download-2-_jpeg.rf.045e60847bcb4a2f04bb1b3c210c4dfc.txt\n/kaggle/input/helmet-detection/train/labels/download-1-_jpeg.rf.c91713e8f74f072fb7d998ad338714f8.txt\n/kaggle/input/helmet-detection/train/labels/download-2-_jpeg.rf.ff5ee9976e32a0bbfc768d97646da154.txt\n/kaggle/input/helmet-detection/train/labels/download-4-_jpeg.rf.8c196ad083ece1d11fb0fd5cf946254b.txt\n/kaggle/input/helmet-detection/train/labels/download-4-_jpeg.rf.a2457b6a618a5ba7eb0961caef274bab.txt\n/kaggle/input/helmet-detection/train/labels/download-4-_jpeg.rf.a9429ee3afc66e07c278c4d1ecd8710c.txt\n/kaggle/input/helmet-detection/train/labels/download-4-_jpeg.rf.0d460654881da77827a8d65e40716d4b.txt\n/kaggle/input/helmet-detection/train/labels/download-1-_jpeg.rf.db0dd3f620d35fb6f136b164c8386337.txt\n/kaggle/input/helmet-detection/train/labels/download-1-_jpeg.rf.16c69c9ee416776c0d3b03c7077e3264.txt\n/kaggle/input/helmet-detection/train/labels/download-4-_jpeg.rf.bb2c6c0603fa324bd07765e0fadbab98.txt\n/kaggle/input/helmet-detection/train/labels/download-3-_jpeg.rf.bd756e370f257df07127087fd4dc52a4.txt\n/kaggle/input/helmet-detection/train/labels/download-2-_jpeg.rf.8720176e45cddd31a1947635ce3ed52c.txt\n/kaggle/input/helmet-detection/train/labels/download-3-_jpeg.rf.120cf11b0ec0e23fa1d08eb26f27ffff.txt\n/kaggle/input/helmet-detection/train/labels/download-3-_jpeg.rf.c36cf2380d8957d3ebdb555a93b72470.txt\n/kaggle/input/helmet-detection/train/labels/download-4-_jpeg.rf.2441cf559c5984a815e884fc3cfe5c7e.txt\n/kaggle/input/helmet-detection/train/labels/download-1-_jpeg.rf.da74a7a7bd3a4d86bda1f1f7612e62f9.txt\n/kaggle/input/helmet-detection/train/labels/download-1-_jpeg.rf.7891e7d64f06eaef9a2389ef3a0db068.txt\n/kaggle/input/helmet-detection/train/labels/download-1-_jpeg.rf.b265c93c253bc06bb0e84e9ddf5b947f.txt\n/kaggle/input/helmet-detection/train/labels/download-4-_jpeg.rf.698ffd5b1395d3607323a55efb31d4b5.txt\n/kaggle/input/helmet-detection/train/labels/download-3-_jpeg.rf.2fed104b37fe00b5ebd4699b3b965084.txt\n/kaggle/input/helmet-detection/train/labels/download-1-_jpeg.rf.3978c4dfef5ab4c89ea04d10dff251d2.txt\n/kaggle/input/helmet-detection/train/labels/download-2-_jpeg.rf.b40d23b077bdd85daa893809416c964b.txt\n/kaggle/input/helmet-detection/train/labels/download-3-_jpeg.rf.a37b690a4f7f1b66f0a2011b1a819abe.txt\n/kaggle/input/helmet-detection/train/labels/download-3-_jpeg.rf.fbb7835efb21f8506fd4600976b6dbdf.txt\n/kaggle/input/helmet-detection/train/labels/download-2-_jpeg.rf.2ac34f953ceb7992453680f74177d0ee.txt\n/kaggle/input/helmet-detection/train/labels/download-3-_jpeg.rf.e0907d4d6794ccafd17d74d8bdae32d8.txt\n/kaggle/input/helmet-detection/train/labels/download-2-_jpeg.rf.0af2cbf6582cf7977f06ef6f84f22426.txt\n/kaggle/input/helmet-detection/train/labels/download-2-_jpeg.rf.5eb007e64ffea8376e60f6644fe9f211.txt\n/kaggle/input/helmet-detection/train/labels/download-2-_jpeg.rf.c8268ecc60e1c7c75e1488eb00b441b9.txt\n/kaggle/input/helmet-detection/train/labels/download-1-_jpeg.rf.9ffecfa528c068f0254838c8fd8dc2dc.txt\n/kaggle/input/helmet-detection/train/labels/download-3-_jpeg.rf.ebde9c3098235b9ff3d90a6ef5fe6b16.txt\n/kaggle/input/helmet-detection/train/labels/download-4-_jpeg.rf.4d470ee8f494f9f1340aa5d89608cae3.txt\n/kaggle/input/helmet-detection/train/labels/download-1-_jpeg.rf.86533c6874af22f21b7a925b764885ed.txt\n/kaggle/input/helmet-detection/train/labels/download-2-_jpeg.rf.e4c8932d591add9b4396814368227c6e.txt\n/kaggle/input/helmet-detection/train/labels/download-4-_jpeg.rf.26151bc12ee9f738a1686c5c8f80afac.txt\n/kaggle/input/helmet-detection/train/labels/download-2-_jpeg.rf.dd6d3b51f9990d9f1fbc46d743b0821b.txt\n/kaggle/input/helmet-detection/train/labels/download-2-_jpeg.rf.bd40fbabf827f390ed5a6bdbe035d5e0.txt\n/kaggle/input/helmet-detection/train/labels/download-2-_jpeg.rf.8800d26fb9332dd90af6c19428a4fa5b.txt\n/kaggle/input/helmet-detection/train/labels/download-3-_jpeg.rf.96fa58d63cb0a28b9266cf86a45f7b9c.txt\n/kaggle/input/helmet-detection/train/labels/download-4-_jpeg.rf.7ea8dbb36292ff8f48b1b243fddbfa8e.txt\n/kaggle/input/helmet-detection/train/labels/download-1-_jpeg.rf.119f3b3431d4e4d68c487d4b9dd13ce7.txt\n/kaggle/input/helmet-detection/train/images/download-4-_jpeg.rf.a9429ee3afc66e07c278c4d1ecd8710c.jpg\n/kaggle/input/helmet-detection/train/images/download-1-_jpeg.rf.c91713e8f74f072fb7d998ad338714f8.jpg\n/kaggle/input/helmet-detection/train/images/download-3-_jpeg.rf.a37b690a4f7f1b66f0a2011b1a819abe.jpg\n/kaggle/input/helmet-detection/train/images/download-1-_jpeg.rf.3978c4dfef5ab4c89ea04d10dff251d2.jpg\n/kaggle/input/helmet-detection/train/images/download-4-_jpeg.rf.26151bc12ee9f738a1686c5c8f80afac.jpg\n/kaggle/input/helmet-detection/train/images/download-4-_jpeg.rf.a395786b99699a8da18a9b33796049ca.jpg\n/kaggle/input/helmet-detection/train/images/download-3-_jpeg.rf.e0907d4d6794ccafd17d74d8bdae32d8.jpg\n/kaggle/input/helmet-detection/train/images/download-2-_jpeg.rf.e4c8932d591add9b4396814368227c6e.jpg\n/kaggle/input/helmet-detection/train/images/download-3-_jpeg.rf.2fed104b37fe00b5ebd4699b3b965084.jpg\n/kaggle/input/helmet-detection/train/images/download-2-_jpeg.rf.5eb007e64ffea8376e60f6644fe9f211.jpg\n/kaggle/input/helmet-detection/train/images/download-2-_jpeg.rf.bd40fbabf827f390ed5a6bdbe035d5e0.jpg\n/kaggle/input/helmet-detection/train/images/download-1-_jpeg.rf.db0dd3f620d35fb6f136b164c8386337.jpg\n/kaggle/input/helmet-detection/train/images/download-3-_jpeg.rf.159eef270b4e64e678968ed753d37aed.jpg\n/kaggle/input/helmet-detection/train/images/download-1-_jpeg.rf.cdcb0ed149b41b801d2e22866cb3f1a1.jpg\n/kaggle/input/helmet-detection/train/images/download-2-_jpeg.rf.b40d23b077bdd85daa893809416c964b.jpg\n/kaggle/input/helmet-detection/train/images/download-1-_jpeg.rf.da74a7a7bd3a4d86bda1f1f7612e62f9.jpg\n/kaggle/input/helmet-detection/train/images/download-3-_jpeg.rf.ebde9c3098235b9ff3d90a6ef5fe6b16.jpg\n/kaggle/input/helmet-detection/train/images/download-3-_jpeg.rf.c36cf2380d8957d3ebdb555a93b72470.jpg\n/kaggle/input/helmet-detection/train/images/download-2-_jpeg.rf.ff5ee9976e32a0bbfc768d97646da154.jpg\n/kaggle/input/helmet-detection/train/images/download-4-_jpeg.rf.698ffd5b1395d3607323a55efb31d4b5.jpg\n/kaggle/input/helmet-detection/train/images/download-2-_jpeg.rf.2ac34f953ceb7992453680f74177d0ee.jpg\n/kaggle/input/helmet-detection/train/images/download-4-_jpeg.rf.bb2c6c0603fa324bd07765e0fadbab98.jpg\n/kaggle/input/helmet-detection/train/images/download-4-_jpeg.rf.3fd096d581c8bc142efbde4703cfa53e.jpg\n/kaggle/input/helmet-detection/train/images/download-2-_jpeg.rf.8720176e45cddd31a1947635ce3ed52c.jpg\n/kaggle/input/helmet-detection/train/images/download-1-_jpeg.rf.16c69c9ee416776c0d3b03c7077e3264.jpg\n/kaggle/input/helmet-detection/train/images/download-4-_jpeg.rf.2441cf559c5984a815e884fc3cfe5c7e.jpg\n/kaggle/input/helmet-detection/train/images/download-3-_jpeg.rf.892ca6a5f88b684a7ed049ee848e3d5a.jpg\n/kaggle/input/helmet-detection/train/images/download-4-_jpeg.rf.0d460654881da77827a8d65e40716d4b.jpg\n/kaggle/input/helmet-detection/train/images/download-3-_jpeg.rf.120cf11b0ec0e23fa1d08eb26f27ffff.jpg\n/kaggle/input/helmet-detection/train/images/download-4-_jpeg.rf.8c196ad083ece1d11fb0fd5cf946254b.jpg\n/kaggle/input/helmet-detection/train/images/download-2-_jpeg.rf.0af2cbf6582cf7977f06ef6f84f22426.jpg\n/kaggle/input/helmet-detection/train/images/download-3-_jpeg.rf.96fa58d63cb0a28b9266cf86a45f7b9c.jpg\n/kaggle/input/helmet-detection/train/images/download-3-_jpeg.rf.bd756e370f257df07127087fd4dc52a4.jpg\n/kaggle/input/helmet-detection/train/images/download-4-_jpeg.rf.4d470ee8f494f9f1340aa5d89608cae3.jpg\n/kaggle/input/helmet-detection/train/images/download-4-_jpeg.rf.a2457b6a618a5ba7eb0961caef274bab.jpg\n/kaggle/input/helmet-detection/train/images/download-1-_jpeg.rf.86533c6874af22f21b7a925b764885ed.jpg\n/kaggle/input/helmet-detection/train/images/download-1-_jpeg.rf.119f3b3431d4e4d68c487d4b9dd13ce7.jpg\n/kaggle/input/helmet-detection/train/images/download-2-_jpeg.rf.dd6d3b51f9990d9f1fbc46d743b0821b.jpg\n/kaggle/input/helmet-detection/train/images/download-1-_jpeg.rf.7891e7d64f06eaef9a2389ef3a0db068.jpg\n/kaggle/input/helmet-detection/train/images/download-3-_jpeg.rf.fbb7835efb21f8506fd4600976b6dbdf.jpg\n/kaggle/input/helmet-detection/train/images/download-1-_jpeg.rf.5b083ffc1b5e066f9bbc6f30d95afc97.jpg\n/kaggle/input/helmet-detection/train/images/download-3-_jpeg.rf.25b676dbd95af36026fc7930166d280e.jpg\n/kaggle/input/helmet-detection/train/images/download-4-_jpeg.rf.7ea8dbb36292ff8f48b1b243fddbfa8e.jpg\n/kaggle/input/helmet-detection/train/images/download-2-_jpeg.rf.045e60847bcb4a2f04bb1b3c210c4dfc.jpg\n/kaggle/input/helmet-detection/train/images/download-2-_jpeg.rf.c8268ecc60e1c7c75e1488eb00b441b9.jpg\n/kaggle/input/helmet-detection/train/images/download-1-_jpeg.rf.b265c93c253bc06bb0e84e9ddf5b947f.jpg\n/kaggle/input/helmet-detection/train/images/download-1-_jpeg.rf.9ffecfa528c068f0254838c8fd8dc2dc.jpg\n/kaggle/input/helmet-detection/train/images/download-2-_jpeg.rf.8800d26fb9332dd90af6c19428a4fa5b.jpg\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"%pip install ultralytics\nimport ultralytics\nultralytics.checks()","metadata":{"execution":{"iopub.status.busy":"2024-11-28T16:02:53.319382Z","iopub.execute_input":"2024-11-28T16:02:53.320330Z","iopub.status.idle":"2024-11-28T16:03:07.213403Z","shell.execute_reply.started":"2024-11-28T16:02:53.320288Z","shell.execute_reply":"2024-11-28T16:03:07.212576Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Ultralytics 8.3.38 🚀 Python-3.10.14 torch-2.4.0 CUDA:0 (Tesla P100-PCIE-16GB, 16269MiB)\nSetup complete ✅ (4 CPUs, 31.4 GB RAM, 5933.9/8062.4 GB disk)\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"!pip uninstall -y wandb","metadata":{"execution":{"iopub.status.busy":"2024-11-28T16:03:16.143075Z","iopub.execute_input":"2024-11-28T16:03:16.143548Z","iopub.status.idle":"2024-11-28T16:03:28.605436Z","shell.execute_reply.started":"2024-11-28T16:03:16.143516Z","shell.execute_reply":"2024-11-28T16:03:28.604393Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Found existing installation: wandb 0.18.3\nUninstalling wandb-0.18.3:\n  Successfully uninstalled wandb-0.18.3\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"# Train YOLOv8n on COCO8 for 50 epochs\n!yolo train model= yolov8n.pt data=\"/kaggle/input/fire-detection-dataset/Fire Detection.v1i.yolov8/data.yaml\" epochs=35 imgsz=640 batch=64\n\n\n\n\n\n\n\n\n","metadata":{"execution":{"iopub.status.busy":"2024-11-28T16:03:44.649232Z","iopub.execute_input":"2024-11-28T16:03:44.650068Z","iopub.status.idle":"2024-11-28T16:06:16.440867Z","shell.execute_reply.started":"2024-11-28T16:03:44.650031Z","shell.execute_reply":"2024-11-28T16:06:16.439914Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Downloading https://github.com/ultralytics/assets/releases/download/v8.3.0/yolov8n.pt to 'yolov8n.pt'...\n100%|███████████████████████████████████████| 6.25M/6.25M [00:00<00:00, 168MB/s]\nUltralytics 8.3.38 🚀 Python-3.10.14 torch-2.4.0 CUDA:0 (Tesla P100-PCIE-16GB, 16269MiB)\n\u001b[34m\u001b[1mengine/trainer: \u001b[0mtask=detect, mode=train, model=yolov8n.pt, data=/kaggle/input/fire-detection-dataset/Fire Detection.v1i.yolov8/data.yaml, epochs=35, time=None, patience=100, batch=64, imgsz=640, save=True, save_period=-1, cache=False, device=None, workers=8, project=None, name=train, exist_ok=False, pretrained=True, optimizer=auto, verbose=True, seed=0, deterministic=True, single_cls=False, rect=False, cos_lr=False, close_mosaic=10, resume=False, amp=True, fraction=1.0, profile=False, freeze=None, multi_scale=False, overlap_mask=True, mask_ratio=4, dropout=0.0, val=True, split=val, save_json=False, save_hybrid=False, conf=None, iou=0.7, max_det=300, half=False, dnn=False, plots=True, source=None, vid_stride=1, stream_buffer=False, visualize=False, augment=False, agnostic_nms=False, classes=None, retina_masks=False, embed=None, show=False, save_frames=False, save_txt=False, save_conf=False, save_crop=False, show_labels=True, show_conf=True, show_boxes=True, line_width=None, format=torchscript, keras=False, optimize=False, int8=False, dynamic=False, simplify=True, opset=None, workspace=None, nms=False, lr0=0.01, lrf=0.01, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=7.5, cls=0.5, dfl=1.5, pose=12.0, kobj=1.0, nbs=64, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, bgr=0.0, mosaic=1.0, mixup=0.0, copy_paste=0.0, copy_paste_mode=flip, auto_augment=randaugment, erasing=0.4, crop_fraction=1.0, cfg=None, tracker=botsort.yaml, save_dir=runs/detect/train\nDownloading https://ultralytics.com/assets/Arial.ttf to '/root/.config/Ultralytics/Arial.ttf'...\n100%|████████████████████████████████████████| 755k/755k [00:00<00:00, 2.61MB/s]\nOverriding model.yaml nc=80 with nc=1\n\n                   from  n    params  module                                       arguments                     \n  0                  -1  1       464  ultralytics.nn.modules.conv.Conv             [3, 16, 3, 2]                 \n  1                  -1  1      4672  ultralytics.nn.modules.conv.Conv             [16, 32, 3, 2]                \n  2                  -1  1      7360  ultralytics.nn.modules.block.C2f             [32, 32, 1, True]             \n  3                  -1  1     18560  ultralytics.nn.modules.conv.Conv             [32, 64, 3, 2]                \n  4                  -1  2     49664  ultralytics.nn.modules.block.C2f             [64, 64, 2, True]             \n  5                  -1  1     73984  ultralytics.nn.modules.conv.Conv             [64, 128, 3, 2]               \n  6                  -1  2    197632  ultralytics.nn.modules.block.C2f             [128, 128, 2, True]           \n  7                  -1  1    295424  ultralytics.nn.modules.conv.Conv             [128, 256, 3, 2]              \n  8                  -1  1    460288  ultralytics.nn.modules.block.C2f             [256, 256, 1, True]           \n  9                  -1  1    164608  ultralytics.nn.modules.block.SPPF            [256, 256, 5]                 \n 10                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n 11             [-1, 6]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 12                  -1  1    148224  ultralytics.nn.modules.block.C2f             [384, 128, 1]                 \n 13                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n 14             [-1, 4]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 15                  -1  1     37248  ultralytics.nn.modules.block.C2f             [192, 64, 1]                  \n 16                  -1  1     36992  ultralytics.nn.modules.conv.Conv             [64, 64, 3, 2]                \n 17            [-1, 12]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 18                  -1  1    123648  ultralytics.nn.modules.block.C2f             [192, 128, 1]                 \n 19                  -1  1    147712  ultralytics.nn.modules.conv.Conv             [128, 128, 3, 2]              \n 20             [-1, 9]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 21                  -1  1    493056  ultralytics.nn.modules.block.C2f             [384, 256, 1]                 \n 22        [15, 18, 21]  1    751507  ultralytics.nn.modules.head.Detect           [1, [64, 128, 256]]           \nModel summary: 225 layers, 3,011,043 parameters, 3,011,027 gradients, 8.2 GFLOPs\n\nTransferred 319/355 items from pretrained weights\n\u001b[34m\u001b[1mTensorBoard: \u001b[0mStart with 'tensorboard --logdir runs/detect/train', view at http://localhost:6006/\nFreezing layer 'model.22.dfl.conv.weight'\n\u001b[34m\u001b[1mAMP: \u001b[0mrunning Automatic Mixed Precision (AMP) checks...\nDownloading https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n.pt to 'yolo11n.pt'...\n100%|███████████████████████████████████████| 5.35M/5.35M [00:00<00:00, 183MB/s]\n\u001b[34m\u001b[1mAMP: \u001b[0mchecks passed ✅\n\u001b[34m\u001b[1mtrain: \u001b[0mScanning /kaggle/input/fire-detection-dataset/Fire Detection.v1i.yolov8/t\u001b[0m\n\u001b[34m\u001b[1mtrain: \u001b[0mWARNING ⚠️ Cache directory /kaggle/input/fire-detection-dataset/Fire Detection.v1i.yolov8/train is not writeable, cache not saved.\n/opt/conda/lib/python3.10/site-packages/albumentations/__init__.py:13: UserWarning: A new version of Albumentations is available: 1.4.21 (you have 1.4.17). Upgrade using: pip install -U albumentations. To disable automatic update checks, set the environment variable NO_ALBUMENTATIONS_UPDATE to 1.\n  check_for_updates()\n\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01, num_output_channels=3, method='weighted_average'), CLAHE(p=0.01, clip_limit=(1, 4.0), tile_grid_size=(8, 8))\n/opt/conda/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n  self.pid = os.fork()\n\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/input/fire-detection-dataset/Fire Detection.v1i.yolov8/val\u001b[0m\n\u001b[34m\u001b[1mval: \u001b[0mWARNING ⚠️ Cache directory /kaggle/input/fire-detection-dataset/Fire Detection.v1i.yolov8/valid is not writeable, cache not saved.\nPlotting labels to runs/detect/train/labels.jpg... \n\u001b[34m\u001b[1moptimizer:\u001b[0m 'optimizer=auto' found, ignoring 'lr0=0.01' and 'momentum=0.937' and determining best 'optimizer', 'lr0' and 'momentum' automatically... \n\u001b[34m\u001b[1moptimizer:\u001b[0m AdamW(lr=0.002, momentum=0.9) with parameter groups 57 weight(decay=0.0), 64 weight(decay=0.0005), 63 bias(decay=0.0)\n\u001b[34m\u001b[1mTensorBoard: \u001b[0mmodel graph visualization added ✅\nImage sizes 640 train, 640 val\nUsing 4 dataloader workers\nLogging results to \u001b[1mruns/detect/train\u001b[0m\nStarting training for 35 epochs...\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       1/35      8.43G      1.882      3.076      2.037        105        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52    0.00515      0.654     0.0266    0.00589\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       2/35      7.99G      1.922      3.036      2.059        123        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52    0.00545      0.692     0.0284    0.00687\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       3/35       7.9G      1.933      3.053      2.016        137        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52    0.00576      0.731      0.024    0.00773\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       4/35      8.01G      1.783      2.762      1.917        120        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52    0.00621      0.788     0.0677     0.0164\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       5/35      8.01G      1.693      2.435      1.836        151        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52    0.00591       0.75     0.0752     0.0291\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       6/35      8.01G      1.646      2.372      1.774        127        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52    0.00621      0.788     0.0516     0.0187\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       7/35      8.01G      1.637      2.319      1.754        120        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52    0.00591       0.75     0.0826     0.0303\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       8/35      8.01G      1.574      2.183       1.71        134        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52    0.00636      0.808      0.112     0.0497\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       9/35      8.01G      1.601      2.163       1.73        119        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52    0.00576      0.731     0.0968     0.0279\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      10/35      8.01G      1.606      2.098      1.706        129        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.207      0.269      0.136     0.0482\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      11/35      8.01G      1.533      2.128      1.701        110        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.392     0.0769      0.131      0.049\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      12/35      8.01G      1.513      1.953       1.68        126        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.114     0.0577     0.0519     0.0147\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      13/35      8.01G      1.501      1.989      1.702        154        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.157     0.0769     0.0727     0.0186\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      14/35      8.01G      1.539      1.976      1.687        131        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.178      0.135     0.0612     0.0241\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      15/35      8.01G      1.536      1.977      1.748        120        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52    0.00485      0.615     0.0229    0.00639\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      16/35      8.01G      1.525       1.91      1.718        123        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52     0.0668     0.0769      0.034    0.00889\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      17/35      8.01G      1.486      1.828      1.631        151        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.071     0.0577     0.0267    0.00827\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      18/35      8.01G      1.441      1.766      1.586        102        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.116     0.0769     0.0439      0.013\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      19/35      8.01G      1.456      1.766      1.622        142        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.142      0.115     0.0618     0.0198\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      20/35      8.01G       1.42      1.705      1.576        123        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.153      0.135     0.0631      0.021\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      21/35      8.01G      1.429      1.667      1.616        135        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.152      0.192     0.0779     0.0305\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      22/35      8.01G       1.39      1.523      1.539        135        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.225      0.154     0.0831     0.0227\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      23/35      8.01G      1.445      1.607       1.58        149        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52       0.29      0.115     0.0852     0.0176\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      24/35      8.01G      1.323      1.495      1.491        124        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.184      0.192     0.0871     0.0262\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      25/35      8.01G      1.358      1.478      1.482        143        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.327     0.0962     0.0931     0.0245\nClosing dataloader mosaic\n\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01, num_output_channels=3, method='weighted_average'), CLAHE(p=0.01, clip_limit=(1, 4.0), tile_grid_size=(8, 8))\n/opt/conda/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n  self.pid = os.fork()\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      26/35      8.01G      1.404      1.677      1.592         71        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.362      0.153       0.12       0.04\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      27/35      8.01G      1.289      1.543       1.52         63        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.235      0.173     0.0773     0.0261\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      28/35      8.01G      1.258      1.419      1.498         57        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.221      0.212       0.11     0.0316\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      29/35      8.01G      1.226      1.273      1.451         67        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.209      0.288      0.104     0.0298\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      30/35      8.01G      1.192      1.258      1.458         59        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.346      0.288      0.198     0.0622\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      31/35      8.01G      1.173      1.209      1.412         67        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.181       0.25      0.165     0.0593\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      32/35      8.01G      1.112      1.103      1.361         69        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.507      0.212      0.201     0.0607\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      33/35      8.01G      1.037      1.079      1.316         51        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.522      0.269       0.25     0.0773\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      34/35      8.01G     0.9682     0.9727      1.243         56        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.312      0.288      0.176     0.0659\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      35/35      8.01G     0.9628     0.9737      1.251         73        640: 1\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.405      0.308      0.233     0.0934\n\n35 epochs completed in 0.032 hours.\nOptimizer stripped from runs/detect/train/weights/last.pt, 6.2MB\nOptimizer stripped from runs/detect/train/weights/best.pt, 6.2MB\n\nValidating runs/detect/train/weights/best.pt...\nUltralytics 8.3.38 🚀 Python-3.10.14 torch-2.4.0 CUDA:0 (Tesla P100-PCIE-16GB, 16269MiB)\nModel summary (fused): 168 layers, 3,005,843 parameters, 0 gradients, 8.1 GFLOPs\n                 Class     Images  Instances      Box(P          R      mAP50  m\n                   all         22         52      0.404      0.308      0.233     0.0935\nSpeed: 0.2ms preprocess, 2.2ms inference, 0.0ms loss, 1.2ms postprocess per image\nResults saved to \u001b[1mruns/detect/train\u001b[0m\n💡 Learn more at https://docs.ultralytics.com/modes/train\n","output_type":"stream"}],"execution_count":3},{"cell_type":"code","source":"!yolo detect train data= \"/kaggle/input/new-weopon-detection/data.yaml\" model=\"/kaggle/working/runs/detect/train6/weights/best.pt\" resume=True\n\n","metadata":{},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Run inference on an image with YOLOv8n\n!yolo predict model=\"/kaggle/working/runs/detect/train/weights/best.pt\" source='/kaggle/input/fire-detection-dataset/10.jpg'","metadata":{"execution":{"iopub.status.busy":"2024-11-28T16:50:26.253648Z","iopub.execute_input":"2024-11-28T16:50:26.254084Z","iopub.status.idle":"2024-11-28T16:50:31.621168Z","shell.execute_reply.started":"2024-11-28T16:50:26.254047Z","shell.execute_reply":"2024-11-28T16:50:31.620000Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Ultralytics 8.3.38 🚀 Python-3.10.14 torch-2.4.0 CUDA:0 (Tesla P100-PCIE-16GB, 16269MiB)\nModel summary (fused): 168 layers, 3,005,843 parameters, 0 gradients, 8.1 GFLOPs\n\nimage 1/1 /kaggle/input/fire-detection-dataset/10.jpg: 480x640 1 Fire, 33.3ms\nSpeed: 5.9ms preprocess, 33.3ms inference, 161.0ms postprocess per image at shape (1, 3, 480, 640)\nResults saved to \u001b[1mruns/detect/predict3\u001b[0m\n💡 Learn more at https://docs.ultralytics.com/modes/predict\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"\n\n","metadata":{},"outputs":[],"execution_count":null}]}